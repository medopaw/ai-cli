# AI 服务提供商配置
[providers.ollama]
base_url = "http://localhost:11434"
max_diff_length = 120000  # 可选：覆盖模型默认限制(大部分ollama模型支持32k tokens)

[providers.deepseek]
api_key = ""  # 从 https://platform.deepseek.com/ 获取 API Key
base_url = "https://api.deepseek.com"
max_diff_length = 120000    # DeepSeek支持32k tokens(约120k字符)

# 不同命令使用的AI配置
[commands.git_operations]  # commit, push, publish 命令
provider = "ollama"
model = "gemma2:9b"        # 专门优化commit message生成
# 使用 DeepSeek 示例: provider = "deepseek", model = "deepseek-chat"

[commands.conversation]    # ask, chat 命令
provider = "ollama"
model = "qwen2.5:14b"      # 中文对话能力强
# 使用 DeepSeek 示例: provider = "deepseek", model = "deepseek-chat"

[commands.error_analysis]  # fix 命令
provider = "ollama"
model = "qwen2.5-coder:7b"  # Shell错误和系统问题分析专家，支持中文环境
# 使用 DeepSeek 示例: provider = "deepseek", model = "deepseek-reasoner"

# Git 操作配置
[git]
# Commit message 提示模板
commit_prompt = """
You are an expert software engineer that generates concise, 
one-line Git commit messages based on the provided diffs.
Review the provided context and diffs which are about to be committed to a git repo.
Review the diffs carefully.
Generate a one-line commit message for those changes.
The commit message should be structured as follows: <type>: <description>
Use these for <type>: fix, feat, build, chore, ci, docs, style, refactor, perf, test
IMPORTANT: The description must start with a lowercase letter. Never capitalize the first letter of the description.

Ensure the commit message:
- Starts with the appropriate prefix.
- Is in the imperative mood (e.g., "add feature" not "added feature" or "adding feature").
- Does not exceed 72 characters.

Reply only with the one-line commit message, without any additional text, explanations, or line breaks.
Remember: description must start with lowercase letter (e.g., "feat: add new feature", NOT "feat: Add new feature").

Git diff:
{diff}
"""

# 大型 diff 处理配置 (全局默认，各provider可覆盖)
max_diff_length = 50000        # 全局默认diff字符数阈值
max_concurrency = 3            # 最大并发AI请求数，防止API限制
segment_timeout_seconds = 30   # 单个分段处理超时时间(秒)
# 注：各模型实际限制会自动根据token容量调整:
# - GPT-4: ~120k字符 (32k tokens)
# - GPT-3.5: ~50k字符 (16k tokens) 
# - DeepSeek: ~120k字符 (32k tokens)
# - Ollama qwen2.5: ~120k字符 (32k tokens)
# - Ollama gemma2:9b: ~24k字符 (8k tokens)

# 历史记录配置
[history]
enabled = false
